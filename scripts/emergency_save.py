#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import json
import os
import signal
import sys
from datetime import datetime

class EmergencySave:
    def __init__(self, data_path="data"):
        self.data_path = data_path
        self.emergency_dir = os.path.join(data_path, "emergency_backup")
        os.makedirs(self.emergency_dir, exist_ok=True)
        
    def setup_emergency_handlers(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        signal.signal(signal.SIGINT, self._emergency_save_handler)
        signal.signal(signal.SIGTERM, self._emergency_save_handler)
        
    def _emergency_save_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        print(f"\nüö® –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}. –í—ã–ø–æ–ª–Ω—è—é –∞–≤–∞—Ä–∏–π–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...")
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑ memory_manager
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S_emergency")
        backup_file = os.path.join(self.emergency_dir, f"{timestamp}.json")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        emergency_data = {
            'timestamp': datetime.now().isoformat(),
            'signal': signum,
            'last_messages': []  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∏–∑–≤–Ω–µ
        }
        
        with open(backup_file, 'w', encoding='utf-8') as f:
            json.dump(emergency_data, f, ensure_ascii=False, indent=2)
        
        print(f"üíæ –ê–≤–∞—Ä–∏–π–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {backup_file}")
        sys.exit(1)
    
    def save_emergency_state(self, conversation_state):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_file = os.path.join(self.emergency_dir, f"{timestamp}.json")
        
        emergency_data = {
            'timestamp': datetime.now().isoformat(),
            'conversation_state': conversation_state,
            'message_count': len(conversation_state.get('conversation_history', []))
        }
        
        with open(backup_file, 'w', encoding='utf-8') as f:
            json.dump(emergency_data, f, ensure_ascii=False, indent=2)
        
        return backup_file
